Index: servlet/src/com/google/inject/servlet/ServletsModuleBuilder.java
===================================================================
--- servlet/src/com/google/inject/servlet/ServletsModuleBuilder.java	(revision 929)
+++ servlet/src/com/google/inject/servlet/ServletsModuleBuilder.java	(working copy)
@@ -101,5 +101,28 @@
                 contextParams));
       }
     }
+	//scala has a keyword called "with" so we need something else
+    public void by(Class<? extends HttpServlet> servletKey) {
+      by(Key.get(servletKey));
+    }
+
+    public void by(Key<? extends HttpServlet> servletKey) {
+      by(servletKey, new HashMap<String, String>());
+    }
+
+    public void by(Class<? extends HttpServlet> servletKey,
+        Map<String, String> contextParams) {
+      by(Key.get(servletKey), contextParams);
+    }
+
+    public void by(Key<? extends HttpServlet> servletKey,
+        Map<String, String> contextParams) {
+
+      for (String pattern : uriPatterns) {
+        servletDefinitions.add(
+            new ServletDefinition(pattern, servletKey, UriPatternType.get(uriPatternType, pattern),
+                contextParams));
+      }
+    }
   }
-}
\ No newline at end of file
+}
Index: servlet/src/com/google/inject/servlet/ServletModule.java
===================================================================
--- servlet/src/com/google/inject/servlet/ServletModule.java	(revision 929)
+++ servlet/src/com/google/inject/servlet/ServletModule.java	(working copy)
@@ -273,5 +273,10 @@
     void with(Key<? extends HttpServlet> servletKey);
     void with(Class<? extends HttpServlet> servletKey, Map<String, String> contextParams);
     void with(Key<? extends HttpServlet> servletKey, Map<String, String> contextParams);
+	//scala has a keyword "with", so we need something else
+    void by(Class<? extends HttpServlet> servletKey);
+    void by(Key<? extends HttpServlet> servletKey);
+    void by(Class<? extends HttpServlet> servletKey, Map<String, String> contextParams);
+    void by(Key<? extends HttpServlet> servletKey, Map<String, String> contextParams);
   }
 }
Index: src/com/google/inject/internal/Finalizer.java
===================================================================
--- src/com/google/inject/internal/Finalizer.java	(revision 929)
+++ src/com/google/inject/internal/Finalizer.java	(working copy)
@@ -77,10 +77,14 @@
       throw new IllegalArgumentException(
           "Expected " + FINALIZABLE_REFERENCE + ".");
     }
-
-    Finalizer finalizer = new Finalizer(finalizableReferenceClass, frq);
-    finalizer.start();
-    return finalizer.queue;
+    try {
+      Finalizer finalizer = new Finalizer(finalizableReferenceClass, frq);
+      finalizer.start();
+      return finalizer.queue;
+	} catch (SecurityException se){ 
+	  //GAE -- security blows! 
+	  return null;	  
+	}	
   }
 
   private final WeakReference<Class<?>> finalizableReferenceClassReference;
